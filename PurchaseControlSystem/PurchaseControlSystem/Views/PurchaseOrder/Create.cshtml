@model PurchaseControlSystem.ViewModel.PurchaseOrder_VM

@{
    Layout = "~/Views/Shared/_head.cshtml";
}

@*section PurchaseOrder starts*@

<section class="light-bg p-5">
    <div class="container-fluid">
        <div class="row bg-white py-3">
            <div class="col-12 mb-3">
                <h5 class="mb-0 primary-bg text-white p-2 text-center rounded">Purchase Order Create</h5>
            </div>

            @using (Html.BeginForm("Create", "PurchaseOrder", FormMethod.Post, htmlAttributes: new { @class = "col-12 px-0 w-100 form-horizontal", id = "purchase-order-create" }))
            {
                @Html.AntiForgeryToken()


                <div class="row mx-auto">
                    <div class="col-md-3">
                        <div class="d-block my-2">
                            <div class="d-inline-block rounded primary-bg text-white py-1 px-3 font w-50">
                                @Html.LabelFor(model => model.CostCenterId_FK, "Cost Centre", htmlAttributes: new { @class = "control-label text-center mb-0" })
                            </div>
                            <div class="d-inline-block w-50">
                                @Html.DropDownList("CostCenterId_FK", (IEnumerable<SelectListItem>)ViewBag.CostCenterId_FK, "Select Cost Centre", new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height" } })
                            </div>
                        </div>

                        <div class="d-block my-2">
                            <div class="d-inline-block rounded primary-bg text-white py-1 px-3 font w-50">
                                @Html.LabelFor(model => model.AccountId_FK, "Supplier Code", htmlAttributes: new { @class = "control-label text-center mb-0" })
                            </div>
                            <div class="d-inline-block w-50">
                                @Html.DropDownListFor(model => model.AccountId_FK, null, new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height" } })
                            </div>
                        </div>

                        <div class="d-block my-2">
                            <div class="d-inline-block rounded primary-bg text-white py-1 px-3 font w-50">
                                @Html.LabelFor(model => model.DepartmentId_FK, "Department Name", htmlAttributes: new { @class = "control-label text-center mb-0" })
                            </div>
                            <div class="d-inline-block w-50">
                                @Html.DropDownListFor(model => model.DepartmentId_FK, null, new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height" } })
                            </div>
                        </div>

                        <div class="d-block my-2">
                            <div class="d-inline-block rounded primary-bg text-white py-1 px-3 font w-50">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label text-center mb-0" })
                            </div>
                            <div class="d-inline-block w-50">
                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height" } })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4 ml-auto pr-md-0">
                        <div class="d-block my-2">
                            <div class="d-inline-block rounded primary-bg text-white py-1 px-3 font w-50">
                                @Html.LabelFor(model => model.SupplierName, "Supplier Name", htmlAttributes: new { @class = "control-label text-center mb-0" })
                            </div>
                            <div class="d-inline-block w-50">
                                @Html.DropDownListFor(model => model.SupplierName, null, new { htmlAttributes = new { @class = "form-control name-valid font rounded w-100 input-height" } })

                            </div>
                        </div>
                        <div class="d-block my-2">
                            <div class="d-inline-block rounded primary-bg text-white py-1 px-3 font w-50">
                                @Html.LabelFor(model => model.SupplierAddress, "Supplier Address", htmlAttributes: new { @class = "control-label text-center mb-0" })
                            </div>
                            <div class="d-inline-block w-50">
                                @Html.DropDownListFor(model => model.SupplierAddress, null, new { htmlAttributes = new { @class = "form-control name-valid font rounded w-100 input-height" } })
                            </div>
                        </div>

                        <div class="my-2">
                            <ul class="nav nav-bar">
                                <li class="nav-item mr-3">

                                    <a href="#upload-quotes" data-toggle="modal" class="nav-item"><u>Upload Quote</u></a>
                                </li>
                                <li class="nav-item mr-3">
                                    <a href="#supplier-sla" id="SupplierSLA" data-toggle="modal" class="nav-item"><u>View Supplier SLA</u></a>
                                </li>
                                <li class="nav-item mr-3">
                                    <a href="#" class="nav-item"><u>View MRC</u></a>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">

                            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "my-2 primary-text font-weight-bold" })

                            <textarea class="form-control" rows="6" id="Comments"></textarea>
                        </div>
                    </div>

                    <div class="col-md-12 py-3">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered font" id="customFields">
                                <thead>
                                    <tr class="primary-bg text-white">

                                        <th>@Html.LabelFor(model => model.ProductId_FK, "Product Id", htmlAttributes: new { @class = "font text-truncate text-center" })</th>
                                        <th>@Html.LabelFor(model => model.ProductName, "Product Name", htmlAttributes: new { @class = "font text-truncate text-center" })</th>
                                        <th>@Html.Label("Suffix", htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th>@Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th>@Html.LabelFor(model => model.PackSize, htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th>@Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th>@Html.Label("Amount (CUR)", htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th>@Html.Label("Exchange Rate", htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th>@Html.Label("Base Amount", htmlAttributes: new { @class = "font text-truncate text-center" })</th>

                                        <th colspan="4" class="font text-truncate text-center border-white" style="opacity: 0">Read terms conditions history</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>

                                        <td>
                                            @Html.EditorFor(model => model.ProductId_FK, new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height disabled", @disabled = "disabled" } })

                                        </td>

                                        <td>
                                            @Html.DropDownListFor(model => model.ProductName, null, "Select Product", new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height" } })

                                        </td>

                                        <td>
                                            @Html.Editor("Suffix", new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height disabled", @disabled = "disabled" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height qty" } })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.PackSize, new { htmlAttributes = new { @class = "form-control font rounded disabled w-100 input-height", @disabled = "disabled" } })

                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control font rounded disabled w-100 input-height unit-price", @disabled = "disabled" } })

                                        </td>
                                        <td>
                                            @Html.Editor("Amount", new { htmlAttributes = new { @class = "form-control font rounded w-100 disabled input-height ammount-cur", @disabled = "disabled" } })

                                        </td>
                                        <td>
                                            @Html.Editor("Exchange Rate", new { htmlAttributes = new { @class = "form-control font rounded w-100 input-height exc-rate" } })

                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.GrossValue, new { htmlAttributes = new { @class = "form-control disabled font rounded w-100 input-height base-ammount", @disabled = "disabled" } })

                                        </td>

                                        <td class="p-0 text-center pt-1 border-right-0 ">
                                            <div class="app-btn-group">
                                                <a href="javascript:;" class="px-2 py-1 border font terms-conditions" changed="false" terms="0">Select Terms</a>
                                                <a href="#history" data-toggle="modal" class="px-2 py-1"><u>History</u></a>
                                                <a href="javascript:;" class="add-trans text-success ">+</a>
                                            </div>
                                        </td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="d-table h-100 pb-3">
                            <div class="d-table-cell align-bottom">
                                @Html.DropDownList("Approver", (IEnumerable<SelectListItem>)ViewBag.Name, "Select Approver", new { htmlAttributes = new { @class = "px-2 py-1 border font" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="d-table h-100 pb-3">


                            <div class="d-table-cell align-bottom">
                                <a href="javascript:;" class="btn px-2 py-1 border rounded primary-bg text-white py-1 font submit-data">Create PO</a>
                            </div>
                            <div class="d-table-cell align-bottom">
                                <button class="btn px-2 py-1 border rounded primary-bg text-white py-1 font">Cancel Order</button>
                            </div>
                        </div>
                    </div>
                </div>

            }


        </div>
    </div>
</section>

@*section PurchaseOrder ends*@

@*section modal starts*@

<section>
    <div class="modal fade" id="upload-quotes">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header primary-bg rounded-0">
                    <h5 class="modal-title text-white">Uploaded Quotes</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span class="font-weight-normal" aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <object id="myPdf" type="application/pdf" data="F:\2019\ZwawiTraders\Code\PurchaseControlSystem\PurchaseControlSystem\PurchaseControlSystem\Content\Supplier_SLA\ApplicationPrint.pdf"></object>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary-bg text-white font">Save changes</button>
                    <button type="button" class="btn btn-secondary font" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="supplier-sla">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header primary-bg rounded-0">
                    <h5 class="modal-title text-white">Supplier SLA</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span class="font-weight-normal" aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <object data="@Url.Action("GetPDF")"></object>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary-bg text-white font">Save changes</button>
                    <button type="button" class="btn btn-secondary font" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="select-terms">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header primary-bg rounded-0">
                    <h5 class="modal-title text-white">Terms And Conditions</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span class="font-weight-normal" aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Terms and conditions</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary-bg text-white font" save-product-terms="">Save changes</button>
                    <button type="button" class="btn btn-secondary font" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="history">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header primary-bg rounded-0">
                    <h5 class="modal-title text-white">History</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span class="font-weight-normal" aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Complete history goes here.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary-bg text-white font">Save changes</button>
                    <button type="button" class="btn btn-secondary font" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="select-approver">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header primary-bg rounded-0">
                    <h5 class="modal-title text-white">Select Approver</h5>
                    <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                        <span class="font-weight-normal" aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Approvers goes here.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn primary-bg text-white font">Save changes</button>
                    <button type="button" class="btn btn-secondary font" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</section>

@*section modal ends*@

@*section script starts*@

<script type="text/javascript">
    $(document).ready(function () {
        //Selecting Department on CostCentre
        $("#CostCenterId_FK").change(function () {
            var selectedCC = $("#CostCenterId_FK option:selected").val();
            console.log('CostCenterId_FK -> ' + selectedCC);

            $.ajax({
                url: '/PurchaseOrder/getDepartmentByCostCentre',
                type: 'post',
                data: {
                    'costCentre': selectedCC
                },
                success: function (r) {
                    console.log(r);
                    $('#DepartmentId_FK').val(r.DepartmentId_FK);
                },
                error: function (r) {
                    console.log(r);
                }
            });

        });
    });

    //filling the row with product
    $(document).on('change', 'select[name="ProductName"]', function () {
        var selectedPrId = $(this).val();
        console.log('ProductId_FK -> ' + selectedPrId);
        var target = $(this).parents('tr');
        if (selectedPrId == '' || selectedPrId == undefined || selectedPrId == null) {
            $(target).find('#ProductId_FK').val('');
            $(target).find('#Suffix').val('');
            $(target).find('#UnitPrice').val('');
            $(target).find('#PackSize').val('');
        } else {
            $.ajax({
                url: '/PurchaseOrder/getProductById',
                type: 'post',
                data: {
                    'id': selectedPrId
                },
                success: function (r) {
                    console.log(r);
                    $(target).find('#ProductId_FK').val(r.Id);
                    $(target).find('#Suffix').val(r.Suffix);
                    $(target).find('#UnitPrice').val(r.UnitPrice);
                    $(target).find('#PackSize').val(r.PackSize);
                },
                error: function (r) {
                    console.log(r);
                }
            });
        }
    });

    //Header ajax

    $("#SupplierName").change(function () {
        var selectedName = $("#SupplierName option:selected").val();
        console.log('SupplierName -> ' + selectedName);

        $.ajax({
            url: '/PurchaseOrder/getSupplierByName',
            type: 'post',
            data: {
                'supplier': selectedName
            },
            success: function (r) {
                console.log(r);
                $('#AccountId_FK').val(r.AccountId);
                $('#SupplierAddress').val(r.Address1);

            },
            error: function (r) {
                console.log(r);
            }
        });

    });


    $("#SupplierSLA").on('click', function () {
        var SLA = $("#SupplierSLA option:selected").val();
        console.log('SupplierName -> ' + SLA);

        $.ajax({
            url: '/PurchaseOrder/getSlaBySupplierName',
            type: 'post',
            data: {
                'supplierName': SLA
            },
            success: function (r) {
                console.log(r);
                $('#SupplierSLA').val(r.SupplierSLA);
                $('#SupplierAddress').val(r.Address1);

            },
            error: function (r) {
                console.log(r);
            }
        });

    });

</script>

@*section script ends*@

@*section style starts*@

<style>


    table#customFields {
    }

        table#customFields tr th label {
            margin: 0;
            width: 100%;
        }

        table#customFields thead tr th:last-child {
            background: #fff;
            border: none;
        }

        table#customFields .app-btn-group {
            min-width: 208px;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 33px;
        }

        table#customFields tbody tr td .input-height {
            height: unset;
        }

        table#customFields tbody tr td {
            padding: 1px 2px 2px !important;
        }

            table#customFields tbody tr td select {
                width: 100%;
                padding: 5px;
                border-radius: 4px;
                display: block;
                width: 100%;
                height: calc(1.5em + .725rem + 2px);
                padding: .275rem .25rem;
                font-size: 0.8rem;
                font-weight: 400;
                line-height: 1.5;
                color: #495057;
                background-color: #fff;
                background-clip: padding-box;
                border: 1px solid #ced4da;
                border-radius: .25rem;
                transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
            }

        table#customFields .app-btn-group a {
            /* width: 100%; */
            padding: 0px 10px;
        }

            table#customFields .app-btn-group a:last-child {
                font-size: 2.4rem;
                text-decoration: none;
            }

    .check-box-list {
    }

        .check-box-list li {
            list-style: none;
        }

        .check-box-list ul {
            margin: 0px;
            padding: 0px;
        }

            .check-box-list ul li span {
                padding-left: 10px;
            }
</style>

@*section script ends*@